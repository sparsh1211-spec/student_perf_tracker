{"version":3,"sources":["components/Sidebar.tsx","pages/Dashboard.page.tsx","pages/Lecture.page.tsx","pages/Recordings.page.tsx","pages/AppContainer.page.tsx","components/AuthHero.webp","components/AuthHero.tsx","pages/Login.page.tsx","components/Input/Input.tsx","pages/Signup.page.tsx","pages/PasswordRecovery.page.tsx","pages/Auth.page.tsx","pages/NotFound.page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Sidebar","props","useState","isMenuOpen","setIsMenuOpen","isAnimating","setIsAnimating","className","xmlns","viewBox","fill","stroke","d","points","onClick","undefined","open","Root","show","as","Fragment","beforeLeave","afterLeave","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","defaultProps","React","memo","Dashboard","to","Lecture","useParams","lectureNumber","batchNumber","Recordings","AppContainer","path","AuthHero","console","log","useEffect","src","logo","alt","Login","history","useHistory","useFormik","initialValues","email","password","validationSchema","yup","shape","required","min","onSubmit","data","helpers","setTimeout","push","getFieldProps","handleSubmit","touched","isSubmitting","errors","setData","passwordtype","setPasswordtype","emailValidator","passwordValidator","negArr","of","negative","formValidator","validateSync","e","isValidSync","htmlFor","style","margin","type","placeholder","id","autoComplete","event","preventDefault","Input","error","rest","Signup","PasswordRecovery","Auth","NotFound","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b014c27e.chunk.js","sourcesContent":["\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport React, { Fragment } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport { AiOutlineDown } from 'react-icons/ai';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Sidebar: React.FC<Props> = (props) => {\r\n\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n    const [isAnimating, setIsAnimating] = useState(false);\r\n    return (\r\n\r\n    \r\n\r\n            \r\n\r\n                <div className=\"h-12 mt-4 ml-4 \"><button className=\"items-center justify-center w-56 p-2 text-center bg-white border-2 rounded-lg shadow-md\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" className=\"inline w-4 h-4 mr-2 feather feather-home\"><path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg><span className=\"mr-2 text-sm font-semibold tracking-widest text-gray-700\">Dashboard</span><AiOutlineDown className=\"inline w-3 h-3\" onClick={isAnimating ? undefined : () => setIsMenuOpen((open) => !open)} /></button>\r\n\r\n                    <Transition.Root show={isMenuOpen} as={Fragment}\r\n                        beforeLeave={() => setIsAnimating(true)}\r\n                        afterLeave={() => setIsAnimating(false)}\r\n                    >\r\n                        <Dialog open={isMenuOpen} onClose={setIsMenuOpen}>\r\n                            <Transition.Child as={Fragment}\r\n                                enter=\"transition-transform duration-300\"\r\n                                enterFrom=\"translate-y-11\"\r\n                                enterTo=\"translate-y-0\"\r\n                                leave=\"transition-transform duration-300\"\r\n                                leaveFrom=\"translate-y-0\"\r\n                                leaveTo=\"translate-y-11\">\r\n                                <div className=\"relative left-0 right-0 ml-4 bg-gray top-4\">\r\n                                    <button><ul><li>sales</li>\r\n                                        <li>analytics</li></ul></button></div>\r\n                                         \r\n                                         </Transition.Child>\r\n                                 </Dialog>\r\n                             </Transition.Root>\r\n        </div>\r\n    );\r\n\r\n};\r\nSidebar.defaultProps = {\r\n}\r\n\r\nexport default React.memo(Sidebar);\r\n","\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Props{\r\n   \r\n}\r\n\r\nconst Dashboard: React.FC<Props>=(props) => {\r\n    return (\r\n        <>\r\n            <div>Dashboard_Page h bhai</div>\r\n            <div><Link to=\"/recordings\" className=\"font-bold text-blue-700 underline\">Go to Recordings</Link></div>\r\n        </>\r\n    );\r\n\r\n};\r\nDashboard.defaultProps={\r\n}\r\n\r\nexport default React.memo(Dashboard);\r\n","\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\ninterface Props{\r\n   \r\n}\r\n\r\nconst Lecture: React.FC<Props>=(props) => {\r\n    const {lectureNumber, batchNumber}=useParams<any>();\r\n    \r\n    return (\r\n        <div>\r\n            Showing data of lecture #{lectureNumber} of batch #{batchNumber}\r\n        </div>\r\n    );\r\n\r\n};\r\nLecture.defaultProps={\r\n}\r\n\r\nexport default React.memo(Lecture);\r\n","\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n   \r\n}\r\n\r\nconst Recordings: React.FC<Props>=(props) => {\r\n    return (\r\n        <>\r\n            <div>Recordings Page h bhai.</div>\r\n        </>\r\n    );\r\n\r\n};\r\nRecordings.defaultProps={\r\n}\r\n\r\nexport default React.memo(Recordings);\r\n","\r\nimport React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport DashboardPage from \"./Dashboard.page\";\r\nimport LecturePage from \"./Lecture.page\";\r\nimport RecordingsPage from \"./Recordings.page\";\r\n\r\ninterface Props{\r\n   \r\n}\r\n\r\nconst AppContainer: React.FC<Props>=(props) => {\r\n    return (\r\n        <div className=\"flex flex-row\">\r\n            <Sidebar/>\r\n            <Switch>\r\n             <Route path=\"/dashboard\">\r\n           <DashboardPage/>\r\n         </Route>\r\n         <Route path=\"/recordings\">\r\n           <RecordingsPage/>\r\n         </Route>\r\n         <Route path=\"/batch/:batchNumber/lecture/:lectureNumber\">\r\n             <LecturePage/>\r\n         </Route>\r\n         </Switch>\r\n        </div>\r\n    );\r\n\r\n};\r\nAppContainer.defaultProps={\r\n}\r\n\r\nexport default React.memo(AppContainer);\r\n","export default __webpack_public_path__ + \"static/media/AuthHero.3e23331c.webp\";","\r\nimport React, { useEffect } from \"react\";\r\nimport logo from \"./AuthHero.webp\"\r\n\r\n\r\n\r\ninterface Props{\r\n   \r\n}\r\n\r\nconst AuthHero: React.FC<Props>=(props) => {\r\n    console.log(\" hero rendering\");\r\n    useEffect(() => {\r\n       console.log(\"pehli baar render\");\r\n    }, []);\r\n    return (\r\n        <>\r\n          <div className=\"w-1/2 h-screen text-white bg-black md:block lg:block sm:hidden \">\r\n              <img src={logo} className=\"mx-auto my-44 h-96 w-96\" alt=\"\"/>\r\n             \r\n              </div>  \r\n        </>\r\n    );\r\n\r\n};\r\nAuthHero.defaultProps={\r\n}\r\n\r\nexport default React.memo(AuthHero);\r\n","\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n// import AuthHero from \"../components/AuthHero\";\r\nimport { FaUserCircle, FaSpinner } from 'react-icons/fa';\r\nimport { RiLockPasswordLine } from 'react-icons/ri';\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n// import { HiLockClosed } from \"react-icons/hi\";\r\n// import Input from \"../components/Input\";\r\n\r\n// import Button from \"../components/Button/Button\"\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Login: React.FC<Props> = (props) => {\r\n\r\n    // const [email,setEmail]=useState(\"101.sp@gmail.com\");\r\n    // const [password,setPassword]=useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const {getFieldProps,\r\n        handleSubmit,\r\n        touched,\r\n        isSubmitting,\r\n        errors\r\n    } = useFormik({\r\n        initialValues:{\r\n            email:\"\",\r\n            password:\"\"\r\n        },\r\n        validationSchema:yup.object().shape({\r\n            email: yup.string().required(\"Email is a required field!\").email(\"Must be a valid Email!\"),\r\n            password: yup.string().required(\"Password is a required field!\").min(8,\"Password must be of atleast 8 chars!\"),\r\n        }),\r\n        onSubmit:(data,helpers)=>{\r\n            console.log(\"form submitting\",data);\r\n            setTimeout(()=>{\r\n                console.log(\"successfull\");\r\n                history.push(\"/dashboard\");\r\n            },5000);\r\n           \r\n        }\r\n    });\r\n\r\n\r\n\r\n\r\n    \r\n    const [data, setData] = useState({ email: \"\", password: \"\" })//we can combine both of the above like this\r\n    console.log(setData);\r\n    // const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    //     const nameOfChangeInput = event.target.name;\r\n    //     setData({ ...data, [nameOfChangeInput]: event.target.value });\r\n    // }\r\n    // const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    //     const nameOfBlurredInput = event.target.name;\r\n    //     setTouched({ ...touched, [nameOfBlurredInput]: true });\r\n    // };\r\n\r\n    const [passwordtype, setPasswordtype] = useState(false);\r\n    // const [touched, setTouched] = useState({ email: false, password: false });\r\n    //const [loading, setLoading] = useState(false);\r\n   \r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"component mounted\");\r\n    //     return () => {\r\n    //         console.log(\"component unmounted\");\r\n    //     }\r\n    // }, [])//return inside useEffect runs when the component is unmounted while the function inside useEffect runs when there is a change in dependency array\r\n\r\n    //let emailError = \"\";\r\n    //let passwordError = \"\";\r\n\r\n    //checking functioning of yup library(syntax&working)\r\n\r\n    const emailValidator=yup.string().required().email();\r\n    const passwordValidator=yup.string().required().min(8);//for strings input\r\n    const negArr=yup.array().required().of(yup.number().negative());//for array of negative numbers\r\n    // const numberValidator=yup.number().positive();//for positive numbers\r\n    // const positiveNumberVaildator=yup.array().of(yup.number().positive());//for array of postive numbers\r\n\r\n    \r\n    const formValidator= yup.object().shape({\r\n        email:yup.string().required().email(),\r\n        password:yup.string().required().min(8),\r\n    })\r\n\r\n    try{\r\n        formValidator.validateSync(data);\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n\r\n    \r\n\r\n    // const myData={\r\n    //     age:10,\r\n    //     firstName:\"Sparsh\",\r\n    //     lastName:\"garg\",\r\n    // };\r\n\r\n    // const myDataVaildator=yup.object().shape({\r\n    //     firstName:yup.string().required(),\r\n    //     lastName:yup.string().min(2),\r\n    //     age:yup.number().positive().required()\r\n    // });\r\n\r\n    // console.log(\"MY DATA VALIDATOR RESULTS:\",myDataVaildator.isValidSync(myData));\r\n\r\n\r\n    //\"validate\" returns promise(we use this if the validator is async).\r\n    //\"validateSync\" returns whole data(iff true) in which the data is typecasted.\r\n    //\"isValidSync\" returns boolean value.\r\n\r\n    \r\n    console.log(negArr);\r\n\r\n    console.log(\"isformvalid\",formValidator.isValidSync(data));\r\n    \r\n\r\n    \r\n    console.log(\"email validator\",\r\n    emailValidator.isValidSync(\"\"),\r\n    emailValidator.isValidSync(undefined),\r\n    emailValidator.isValidSync(\"hello\"),\r\n    emailValidator.isValidSync(5),\r\n    emailValidator.isValidSync(\"hello@gmail.com\"),\r\n    emailValidator.isValidSync(\"hi@codespx.io\"),\r\n    \r\n    );\r\n\r\n    console.log(\"password validator\",\r\n    passwordValidator.isValidSync(\"\"),\r\n    passwordValidator.isValidSync(undefined),\r\n    passwordValidator.isValidSync(\"hello\"),\r\n    passwordValidator.isValidSync(5),\r\n    passwordValidator.isValidSync(\"hello@gmail.com\"),\r\n    passwordValidator.isValidSync(\"hi@codespx.io\"),\r\n    \r\n    );\r\n\r\n    \r\n    // if (!data.email) {\r\n    //     emailError = \"Email Address is required\";\r\n    // }\r\n    // else if (!data.email.endsWith(\"@gmail.com\")) {\r\n    //     emailError = \"Please enter a valid Email Address\";\r\n    // }\r\n    // if (!data.password) {\r\n    //     passwordError = \"Password is required\";\r\n    // }\r\n    // else if (data.password.length < 8) {\r\n    //     passwordError = \"Password should be of atleast 8 char.\";\r\n    // }\r\n    return (\r\n\r\n<>\r\n           \r\n            <form className=\"mt-32 lg:ml-36 sm:ml-12\" onSubmit={handleSubmit}>\r\n                 <div className=\"mb-6 text-5xl font-semibold text-blue-600\">Log In to <span className=\"font-extrabold\">DEVS</span></div>\r\n                \r\n                <div className=\"mb-12 font-bold\">New here? <Link to=\"/auth/signup\" className=\"text-indigo-600 underline hover:text-indigo-900\">Create an account</Link></div>\r\n                <div className=\"flex flex-col space-y-10\">\r\n\r\n                    <div className=\"flex items-center space-x-4 text-left border-b border-gray-300\">\r\n                        <label htmlFor=\"email\" className=\"sr-only\" />\r\n                        <FaUserCircle className=\"text-indigo-600\" style={{ margin: 0 + 'px', }} />\r\n                        <input className=\"outline-none \"\r\n                        type=\"email\"\r\n                        placeholder=\"Email address\"\r\n                        id=\"email-address\"\r\n                        autoComplete=\"email\"\r\n                        required\r\n                        {...getFieldProps(\"email\")}/>\r\n\r\n\r\n\r\n                    </div>\r\n                    {touched.email && <div className=\"text-red-500 \">{errors.email}</div>}\r\n\r\n\r\n                    <div className=\"flex items-center space-x-4 text-left border-b border-gray-300\">\r\n                        <label htmlFor=\"Password:\" />\r\n                        <RiLockPasswordLine className=\"text-indigo-600\" style={{ margin: 0 + 'px' }} />\r\n                        <input className=\"outline-none\"\r\n                        type={(passwordtype ? \"text\" : \"password\")}\r\n                        placeholder=\"Password\"\r\n                        required\r\n                        {...getFieldProps(\"password\")}/>\r\n\r\n                    </div>\r\n                    {touched.password && <div className=\"text-red-500\">{errors.password}</div>}\r\n\r\n                </div>\r\n                {isSubmitting && <FaSpinner className=\"mx-auto mt-8 animate-spin\" />}\r\n                <div className=\"flex flex-row items-center space-x-4 text-center mt-11\">\r\n                <div className=\"items-center justify-center font-bold\">Show Password</div>\r\n                    <div className=\"shadow-md\"><input onClick={() => {\r\n                        if (passwordtype === false) {\r\n                            setPasswordtype(true)\r\n                        }\r\n                        else {\r\n                            setPasswordtype(false);\r\n                        }\r\n                    }} className=\"shadow-md cursor-pointer\" type=\"checkbox\" /></div>\r\n                   <div className=\"flex flex-row space-x-4\">\r\n                   <div className=\"ml-32\"> <button type=\"submit\" className=\"p-1 px-4 text-white bg-indigo-500 border-2 rounded-md shadow-md hover:opacity-60\">Login</button></div>\r\n\r\n\r\n                    <div><button type=\"button\" onClick={(event) => {\r\n                        console.log(\"cancel button clicked\");\r\n                        event.preventDefault();\r\n\r\n                    }} className=\"p-1 px-4 text-white bg-indigo-500 border-2 rounded-md shadow-md hover:opacity-60\">Cancel</button></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-8 ml-32\"><Link className=\"pt-8 font-semibold tracking-widest text-blue-800 text-md\" to=\"/auth/forgotpassword\">Forgot Password?</Link></div>\r\n                <p className=\"mt-16 font-semibold text-blue-600\">© 2020 All Rights Reserved. Cookie Preferences, Privacy, and Terms.</p>\r\n               \r\n           \r\n            </form>\r\n           \r\n        </>\r\n\r\n\r\n    );\r\n\r\n};\r\nLogin.defaultProps = {\r\n}\r\n\r\nexport default React.memo(Login);\r\n","\r\nimport React, { InputHTMLAttributes } from \"react\";\r\n\r\ninterface Props extends InputHTMLAttributes<HTMLInputElement> {\r\n    touched?: boolean;\r\n    error?: string;\r\n\r\n}\r\n\r\nconst Input: React.FC<Props> = ({ touched, error, className,id, placeholder, ...rest }) => {\r\n    return (\r\n        <div>\r\n            {id&&placeholder&&(<label htmlFor={id} className=\"sr-only\">\r\n                {placeholder}\r\n            </label>)}\r\n            <input id={id}\r\n                {...rest}\r\n                className={\"outline-none border-black \" + className}\r\n                placeholder={placeholder}/>\r\n            {touched && <div className=\"text-red-500\">{error}</div>}\r\n        </div>\r\n    );\r\n\r\n};\r\nInput.defaultProps = {\r\n}\r\n\r\nexport default React.memo(Input);\r\n","\r\n\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n// import AuthHero from \"../components/AuthHero\";\r\nimport { FaUserCircle, FaSpinner } from 'react-icons/fa';\r\nimport { RiLockPasswordLine } from 'react-icons/ri';\r\n\r\nimport {MdEmail} from 'react-icons/md'\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Input from \"../components/Input/Input\";\r\n// import Input from \"../components/Input\";\r\n\r\ninterface Props{\r\n   \r\n}\r\n\r\nconst Signup: React.FC<Props>=(props) => {\r\n    const history = useHistory();\r\n\r\n    const {getFieldProps,\r\n        handleSubmit,\r\n        touched,\r\n        isSubmitting,\r\n        errors\r\n    } = useFormik({\r\n        initialValues:{\r\n            email:\"\",\r\n            password:\"\"\r\n        },\r\n        validationSchema:yup.object().shape({\r\n            email: yup.string().required(\"Email is a required field!\").email(\"Must be a valid Email!\"),\r\n            password: yup.string().required(\"Password is a required field!\").min(8,\"Password must be of atleast 8 chars!\"),\r\n        }),\r\n        onSubmit:(data)=>{\r\n            console.log(\"form submitting\",data);\r\n            setTimeout(()=>{\r\n                console.log(\"successfull\");\r\n                history.push(\"/dashboard\");\r\n            },5000);\r\n           \r\n        }\r\n    });\r\n\r\n\r\n\r\n\r\n    \r\n    const [data, setData] = useState({ email: \"\", password: \"\" })//we can combine both of the above like this\r\n    console.log(setData);\r\n    // const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    //     const nameOfChangeInput = event.target.name;\r\n    //     setData({ ...data, [nameOfChangeInput]: event.target.value });\r\n    // }\r\n    // const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    //     const nameOfBlurredInput = event.target.name;\r\n    //     setTouched({ ...touched, [nameOfBlurredInput]: true });\r\n    // };\r\n\r\n    const [passwordtype, setPasswordtype] = useState(false);\r\n    // const [touched, setTouched] = useState({ email: false, password: false });\r\n    //const [loading, setLoading] = useState(false);\r\n   \r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"component mounted\");\r\n    //     return () => {\r\n    //         console.log(\"component unmounted\");\r\n    //     }\r\n    // }, [])//return inside useEffect runs when the component is unmounted while the function inside useEffect runs when there is a change in dependency array\r\n\r\n    //let emailError = \"\";\r\n    //let passwordError = \"\";\r\n\r\n    //checking functioning of yup library(syntax&working)\r\n\r\n    // const emailValidator=yup.string().required().email();\r\n    // const passwordValidator=yup.string().required().min(8);//for strings input\r\n    // const negArr=yup.array().required().of(yup.number().negative());//for array of negative numbers\r\n    // const numberValidator=yup.number().positive();//for positive numbers\r\n    // const positiveNumberVaildator=yup.array().of(yup.number().positive());//for array of postive numbers\r\n\r\n    \r\n    const formValidator= yup.object().shape({\r\n        email:yup.string().required().email(),\r\n        password:yup.string().required().min(8),\r\n    })\r\n\r\n    try{\r\n        formValidator.validateSync(data);\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                \r\n            <form className=\"mt-32 ml-36\" onSubmit={handleSubmit}>\r\n                <div className=\"flex flex-col space-y-4\">\r\n            <div className=\"mb-8 text-3xl font-semibold text-blue-500\">Get started with a free account</div>\r\n            <div className=\"mb-12\"><p className=\"inline font-semibold\">Already have an account? </p><Link to=\"/auth/login\" className=\"text-blue-700 underline\">Log in</Link></div></div>\r\n                 \r\n                <div className=\"flex flex-col mt-12 space-y-10\">\r\n\r\n                    <div className=\"flex items-center space-x-4 text-left border-b border-gray-300\"><FaUserCircle className=\"text-indigo-600\" style={{ margin: 0 + 'px', }} /><Input placeholder=\"Username\"/></div>\r\n\r\n                    <div className=\"flex items-center space-x-4 text-left border-b border-gray-300\">\r\n                     \r\n                        <label htmlFor=\"email\" className=\"sr-only\" />\r\n                        <MdEmail className=\"text-indigo-600\" style={{ margin: 0 + 'px', }} />\r\n                        <input className=\"outline-none \"\r\n                        type=\"email\"\r\n                        placeholder=\"Email address\"\r\n                        id=\"email-address\"\r\n                        autoComplete=\"email\"\r\n                        required\r\n                        {...getFieldProps(\"email\")}/>\r\n\r\n\r\n\r\n                    </div>\r\n                    {touched.email && <div className=\"text-red-500 \">{errors.email}</div>}\r\n\r\n\r\n                    <div className=\"flex items-center space-x-4 text-left border-b border-gray-300\">\r\n                        <label htmlFor=\"Password:\" />\r\n                        <RiLockPasswordLine className=\"text-indigo-600\" style={{ margin: 0 + 'px' }} />\r\n                        <input className=\"outline-none\"\r\n                        type={(passwordtype ? \"text\" : \"password\")}\r\n                        placeholder=\"Password\"\r\n                        required\r\n                        {...getFieldProps(\"password\")}/>\r\n\r\n                    </div>\r\n                    {touched.password && <div className=\"text-red-500\">{errors.password}</div>}\r\n                    <div className=\"mt-4\"><input type=\"checkbox\"></input><span className=\"text-blue-600\"> I agree to the terms and conditions</span> </div>\r\n\r\n                </div>\r\n                {isSubmitting && <FaSpinner className=\"mx-auto mt-8 animate-spin\" />}\r\n                <div className=\"flex flex-row items-center space-x-4 text-center mt-11\">\r\n                <div className=\"items-center justify-center font-bold\">Show Password</div>\r\n                    <div className=\"shadow-md\"><input onClick={() => {\r\n                        if (passwordtype === false) {\r\n                            setPasswordtype(true)\r\n                        }\r\n                        else {\r\n                            setPasswordtype(false);\r\n                        }\r\n                    }} className=\"shadow-md cursor-pointer\" type=\"checkbox\" /></div>\r\n                   <div className=\"flex flex-row space-x-4\">\r\n                   <div className=\"ml-32\"> <button type=\"submit\" className=\"p-1 px-4 text-white bg-indigo-500 border-2 rounded-md shadow-md hover:opacity-60\">Get started</button></div>\r\n\r\n\r\n                    <div><button type=\"button\" onClick={(event) => {\r\n                        console.log(\"cancel button clicked\");\r\n                        event.preventDefault();\r\n\r\n                    }} className=\"p-1 px-4 text-white bg-indigo-500 border-2 rounded-md shadow-md hover:opacity-60\">Cancel</button></div>\r\n                    </div>\r\n\r\n                    \r\n                   \r\n                   \r\n\r\n                </div>\r\n                \r\n\r\n                \r\n        \r\n\r\n               \r\n                <p className=\"mt-16 font-semibold text-blue-600\">© 2020 All Rights Reserved. Cookie Preferences, Privacy, and Terms.</p>\r\n               \r\n\r\n            </form>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n\r\n};\r\nSignup.defaultProps={\r\n}\r\n\r\nexport default React.memo(Signup);\r\n\r\n\r\n","\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n   \r\n}\r\n\r\nconst PasswordRecovery: React.FC<Props>=(props) => {\r\n    return (\r\n        <>\r\n            <p>password recovery page.</p>\r\n        </>\r\n    );\r\n\r\n};\r\nPasswordRecovery.defaultProps={\r\n}\r\n\r\nexport default React.memo(PasswordRecovery);\r\n","\r\nimport React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport AuthHero from \"../components/AuthHero\";\r\nimport LoginPage from \"./Login.page\";\r\nimport SignupPage from \"./Signup.page\";\r\nimport PasswordRecovery from \"./PasswordRecovery.page\"\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Auth: React.FC<Props> = (props) => {\r\n    return (\r\n        <div className=\"flex flex-row justify-between\">\r\n            <Switch>\r\n                <Route path=\"/auth/login\">\r\n                    <LoginPage></LoginPage>\r\n                </Route>\r\n                <Route path=\"/auth/signup\">\r\n                    <SignupPage></SignupPage>\r\n                </Route>\r\n                <Route path=\"/auth/forgotpassword\">\r\n                    <PasswordRecovery/>\r\n                </Route>\r\n               \r\n            </Switch>\r\n            <AuthHero></AuthHero>\r\n            \r\n        </div>\r\n    );\r\n\r\n};\r\nAuth.defaultProps = {\r\n}\r\n\r\nexport default React.memo(Auth);\r\n","\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n   \r\n}\r\n\r\nconst NotFound: React.FC<Props>=(props) => {\r\n    return (\r\n        <>\r\n            Sorry the page is not found\r\n        </>\r\n    );\r\n\r\n};\r\nNotFound.defaultProps={\r\n}\r\n\r\nexport default React.memo(NotFound);\r\n","\nimport React from \"react\";\nimport {\n  \n  Switch,\n  Route,\n  // Link,\n  BrowserRouter,\n  Redirect, \n} from \"react-router-dom\";\nimport AppContainerPage from \"./pages/AppContainer.page\";\nimport AuthPage from \"./pages/Auth.page\";\nimport NotFoundPage from \"./pages/NotFound.page\";\n// import DashboardPage from \"./pages/Dashboard.page\";\n// import LoginPage from \"./pages/Login.page\";\n// import RecordingsPage from \"./pages/Recordings.page\";\n// import SignupPage from \"./pages/Signup.page\";\n\n\ninterface Props{\n   \n}\n\nconst App: React.FC<Props>=(props) => {\n    return (\n        <>\n       <BrowserRouter>\n       <Switch>\n         <Route path=\"/\"exact>\n         <Redirect to=\"/auth/login\"></Redirect>\n         </Route>\n         <Route path=\"/auth\">\n           <AuthPage/>\n         </Route>\n         <Route path={[\"/dashboard\", \"/recordings\",\"/batch/:batchNumber/lecture/:lectureNumber\"]}>\n           <AppContainerPage/>\n         </Route>\n         <Route>\n           <NotFoundPage/>\n         </Route>\n       </Switch>\n       </BrowserRouter>\n        </>\n    );\n\n};\nApp.defaultProps={\n}\n\nexport default React.memo(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}