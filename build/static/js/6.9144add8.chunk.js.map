{"version":3,"sources":["components/AuthHero.webp","components/AuthHero.tsx","pages/Auth/Login.page.tsx","components/Input/Input.tsx","pages/Auth/Signup.page.tsx","pages/PasswordRecovery.page.tsx","pages/Auth/Auth.page.tsx"],"names":["AuthHero","props","console","log","useEffect","className","src","logo","alt","defaultProps","React","memo","Login","history","useHistory","dispatch","useDispatch","useFormik","initialValues","email","password","validationSchema","yup","shape","required","min","onSubmit","data","login","then","u","type","payload","push","getFieldProps","handleSubmit","touched","isSubmitting","errors","useState","setData","passwordtype","setPasswordtype","emailValidator","passwordValidator","negArr","of","negative","formValidator","validateSync","e","isValidSync","undefined","to","htmlFor","style","margin","placeholder","id","autoComplete","onClick","event","preventDefault","Input","error","rest","Signup","setTimeout","PasswordRecovery","Auth","path"],"mappings":"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","file":"static/js/6.9144add8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/AuthHero.3e23331c.webp\";","\r\nimport React, { useEffect } from \"react\";\r\nimport logo from \"./AuthHero.webp\"\r\n\r\n\r\n\r\ninterface Props{\r\n   \r\n}\r\n\r\nconst AuthHero: React.FC<Props>=(props) => {\r\n    console.log(\" hero rendering\");\r\n    useEffect(() => {\r\n       console.log(\"pehli baar render\");\r\n    }, []);\r\n    return (\r\n        <>\r\n          <div className=\"w-1/2 h-screen text-white bg-black md:block lg:block sm:hidden \">\r\n              <img src={logo} className=\"mx-auto my-44 h-96 w-96\" alt=\"\"/>\r\n             \r\n              </div>  \r\n        </>\r\n    );\r\n\r\n};\r\nAuthHero.defaultProps={\r\n}\r\n\r\nexport default React.memo(AuthHero);\r\n","\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory, } from \"react-router-dom\";\r\n// import AuthHero from \"../components/AuthHero\";\r\nimport { FaUserCircle, FaSpinner } from 'react-icons/fa';\r\nimport { RiLockPasswordLine } from 'react-icons/ri';\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { login } from \"../../api/auth\";\r\n// import AppContext {user,setUser} from \"../../App.context\";\r\n// import { User } from \"../../models/User\";\r\n// import AppContext from \"../../App.context\";\r\nimport { useDispatch } from \"react-redux\";\r\n// import { HiLockClosed } from \"react-icons/hi\";\r\n// import Input from \"../components/Input\";\r\n\r\n// import Button from \"../components/Button/Button\"\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst Login: React.FC<Props> = () => {\r\n\r\n    // const [email,setEmail]=useState(\"101.sp@gmail.com\");\r\n    // const [password,setPassword]=useState(\"\");\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    // const {setUser}=useContext(AppContext);\r\n\r\n    const { getFieldProps,\r\n        handleSubmit,\r\n        touched,\r\n        isSubmitting,\r\n        errors\r\n    } = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\"\r\n        },\r\n        validationSchema: yup.object().shape({\r\n            email: yup.string().required(\"*Email is a required field!*\").email(\"*Must be a valid Email!*\"),\r\n            password: yup.string().required(\"*Password is a required field!*\").min(8, \"*Password must be of atleast 8 chars!*\"),\r\n        }),\r\n        onSubmit: (data) => {\r\n            login(data).then((u) => {\r\n                dispatch({ type: \"me/login\", payload: u })\r\n                history.push(\"/dashboard\");\r\n            });\r\n        }\r\n    });\r\n    const [data, setData] = useState({ email: \"\", password: \"\" })//we can combine both of the above like this\r\n    console.log(setData);\r\n    // const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    //     const nameOfChangeInput = event.target.name;\r\n    //     setData({ ...data, [nameOfChangeInput]: event.target.value });\r\n    // }\r\n    // const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    //     const nameOfBlurredInput = event.target.name;\r\n    //     setTouched({ ...touched, [nameOfBlurredInput]: true });\r\n    // };\r\n\r\n    const [passwordtype, setPasswordtype] = useState(false);\r\n    // const [touched, setTouched] = useState({ email: false, password: false });\r\n    //const [loading, setLoading] = useState(false);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"component mounted\");\r\n    //     return () => {\r\n    //         console.log(\"component unmounted\");\r\n    //     }\r\n    // }, [])//return inside useEffect runs when the component is unmounted while the function inside useEffect runs when there is a change in dependency array\r\n\r\n    //let emailError = \"\";\r\n    //let passwordError = \"\";\r\n\r\n    //checking functioning of yup library(syntax&working)\r\n\r\n    const emailValidator = yup.string().required().email();\r\n    const passwordValidator = yup.string().required().min(8);//for strings input\r\n    const negArr = yup.array().required().of(yup.number().negative());//for array of negative numbers\r\n    // const numberValidator=yup.number().positive();//for positive numbers\r\n    // const positiveNumberVaildator=yup.array().of(yup.number().positive());//for array of postive numbers\r\n\r\n\r\n    const formValidator = yup.object().shape({\r\n        email: yup.string().required().email(),\r\n        password: yup.string().required().min(8),\r\n    })\r\n\r\n    try {\r\n        formValidator.validateSync(data);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n\r\n\r\n\r\n    // const myData={\r\n    //     age:10,\r\n    //     firstName:\"Sparsh\",\r\n    //     lastName:\"garg\",\r\n    // };\r\n\r\n    // const myDataVaildator=yup.object().shape({\r\n    //     firstName:yup.string().required(),\r\n    //     lastName:yup.string().min(2),\r\n    //     age:yup.number().positive().required()\r\n    // });\r\n\r\n    // console.log(\"MY DATA VALIDATOR RESULTS:\",myDataVaildator.isValidSync(myData));\r\n\r\n\r\n    // \"validate\" returns promise(we use this if the validator is async).\r\n    // \"validateSync\" returns whole data(iff true) in which the data is typecasted.\r\n    // \"isValidSync\" returns boolean value.\r\n\r\n\r\n    console.log(negArr);\r\n\r\n    console.log(\"isformvalid\", formValidator.isValidSync(data));\r\n\r\n\r\n\r\n    console.log(\"email validator\",\r\n        emailValidator.isValidSync(\"\"),\r\n        emailValidator.isValidSync(undefined),\r\n        emailValidator.isValidSync(\"hello\"),\r\n        emailValidator.isValidSync(5),\r\n        emailValidator.isValidSync(\"hello@gmail.com\"),\r\n        emailValidator.isValidSync(\"hi@codespx.io\"),\r\n\r\n    );\r\n\r\n    console.log(\"password validator\",\r\n        passwordValidator.isValidSync(\"\"),\r\n        passwordValidator.isValidSync(undefined),\r\n        passwordValidator.isValidSync(\"hello\"),\r\n        passwordValidator.isValidSync(5),\r\n        passwordValidator.isValidSync(\"hello@gmail.com\"),\r\n        passwordValidator.isValidSync(\"hi@codespx.io\"),\r\n\r\n    );\r\n\r\n\r\n    // if (!data.email) {\r\n    //     emailError = \"Email Address is required\";\r\n    // }\r\n    // else if (!data.email.endsWith(\"@gmail.com\")) {\r\n    //     emailError = \"Please enter a valid Email Address\";\r\n    // }\r\n    // if (!data.password) {\r\n    //     passwordError = \"Password is required\";\r\n    // }\r\n    // else if (data.password.length < 8) {\r\n    //     passwordError = \"Password should be of atleast 8 char.\";\r\n    // }\r\n    return (\r\n\r\n        <>\r\n\r\n            <form className=\"mt-32 lg:ml-36 sm:ml-12\" onSubmit={handleSubmit}>\r\n                <div className=\"mb-6 text-5xl font-semibold text-blue-600\">Log In to <span className=\"font-extrabold\">DEVS</span></div>\r\n\r\n                <div className=\"mb-12 font-bold\">New here? <Link to=\"/auth/signup\" className=\"text-indigo-600 underline hover:text-indigo-900\">Create an account</Link></div>\r\n                <div className=\"flex flex-col\">\r\n\r\n                    <div className=\"flex items-center my-6 space-x-4 text-left border-b border-gray-300\">\r\n                        <label htmlFor=\"email\" className=\"sr-only\" />\r\n                        <FaUserCircle className=\"text-indigo-600\" style={{ margin: 0 + 'px', }} />\r\n                        <input className=\"outline-none \"\r\n                            type=\"email\"\r\n                            placeholder=\"Email address\"\r\n                            id=\"email-address\"\r\n                            autoComplete=\"email\"\r\n                            required\r\n                            {...getFieldProps(\"email\")} />\r\n                        {touched.email && <div className=\"h-6 text-sm font-semibold text-red-500 \">{errors.email}</div>}\r\n                    </div>\r\n                    <div className=\"flex items-center my-6 space-x-4 text-left border-b border-gray-300\">\r\n                        <label htmlFor=\"Password:\" />\r\n                        <RiLockPasswordLine className=\"text-indigo-600\" style={{ margin: 0 + 'px' }} />\r\n                        <input className=\"outline-none\"\r\n                            type={(passwordtype ? \"text\" : \"password\")}\r\n                            placeholder=\"Password\"\r\n                            required\r\n                            {...getFieldProps(\"password\")} />\r\n                        {touched.password && <div className=\"h-6 text-sm font-semibold text-red-500\">{errors.password}</div>}\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                {isSubmitting && <FaSpinner className=\"mx-auto mt-8 animate-spin\" />}\r\n                <div className=\"flex flex-row items-center space-x-4 text-center mt-11\">\r\n                    <div className=\"items-center justify-center font-bold\">Show Password</div>\r\n                    <div className=\"shadow-md\"><input onClick={() => {\r\n                        if (passwordtype === false) {\r\n                            setPasswordtype(true)\r\n                        }\r\n                        else {\r\n                            setPasswordtype(false);\r\n                        }\r\n                    }} className=\"shadow-md cursor-pointer\" type=\"checkbox\" /></div>\r\n                    <div className=\"flex flex-row space-x-4\">\r\n                        <div className=\"ml-32\"> <button type=\"submit\" className=\"p-1 px-4 text-white bg-indigo-500 border-2 rounded-md shadow-md hover:opacity-60\">Login</button></div>\r\n\r\n\r\n                        <div><button type=\"button\" onClick={(event) => {\r\n                            console.log(\"cancel button clicked\");\r\n                            event.preventDefault();\r\n\r\n                        }} className=\"p-1 px-4 text-white bg-indigo-500 border-2 rounded-md shadow-md hover:opacity-60\">Cancel</button></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-8 ml-32\"><Link className=\"pt-8 font-semibold tracking-widest text-blue-800 text-md\" to=\"/auth/forgotpassword\">Forgot Password?</Link></div>\r\n                <p className=\"mt-16 font-semibold text-blue-600\">© 2020 All Rights Reserved. Cookie Preferences, Privacy, and Terms.</p>\r\n\r\n\r\n            </form>\r\n\r\n        </>\r\n\r\n\r\n    );\r\n\r\n};\r\nLogin.defaultProps = {\r\n}\r\nexport default React.memo(Login);\r\n\r\n","\r\nimport React, { InputHTMLAttributes } from \"react\";\r\n\r\ninterface Props extends InputHTMLAttributes<HTMLInputElement> {\r\n    touched?: boolean;\r\n    error?: string;\r\n\r\n}\r\n\r\nconst Input: React.FC<Props> = ({ touched, error, className,id, placeholder, ...rest }) => {\r\n    return (\r\n        <div>\r\n            {id&&placeholder&&(<label htmlFor={id} className=\"sr-only\">\r\n                {placeholder}\r\n            </label>)}\r\n            <input id={id}\r\n                {...rest}\r\n                className={\"outline-none w-full \"  + className}\r\n                placeholder={placeholder}/>\r\n            {touched && <div className=\"text-red-500\">{error}</div>}\r\n        </div>\r\n    );\r\n\r\n};\r\nInput.defaultProps = {\r\n}\r\n\r\nexport default React.memo(Input);\r\n","\r\n\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n// import AuthHero from \"../components/AuthHero\";\r\nimport { FaUserCircle, FaSpinner } from 'react-icons/fa';\r\nimport { RiLockPasswordLine } from 'react-icons/ri';\r\n\r\nimport {MdEmail} from 'react-icons/md'\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Input from \"../../components/Input/Input\";\r\n// import Input from \"../components/Input\";\r\n\r\ninterface Props{\r\n   \r\n}\r\n\r\nconst Signup: React.FC<Props>=(props) => {\r\n    const history = useHistory();\r\n\r\n    const {getFieldProps,\r\n        handleSubmit,\r\n        touched,\r\n        isSubmitting,\r\n        errors\r\n    } = useFormik({\r\n        initialValues:{\r\n            email:\"\",\r\n            password:\"\"\r\n        },\r\n        validationSchema:yup.object().shape({\r\n            email: yup.string().required(\"*Email is a required field!*\").email(\"*Must be a valid Email!*\"),\r\n            password: yup.string().required(\"*Password is a required field!*\").min(8,\"*Password must be of atleast 8 chars!*\"),\r\n        }),\r\n        onSubmit:(data)=>{\r\n            console.log(\"form submitting\",data);\r\n            setTimeout(()=>{\r\n                console.log(\"successfull\");\r\n                history.push(\"/dashboard\");\r\n            },5000);\r\n           \r\n        }\r\n    });\r\n\r\n\r\n\r\n\r\n    \r\n    const [data, setData] = useState({ email: \"\", password: \"\" })//we can combine both of the above like this\r\n    console.log(setData);\r\n    // const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    //     const nameOfChangeInput = event.target.name;\r\n    //     setData({ ...data, [nameOfChangeInput]: event.target.value });\r\n    // }\r\n    // const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    //     const nameOfBlurredInput = event.target.name;\r\n    //     setTouched({ ...touched, [nameOfBlurredInput]: true });\r\n    // };\r\n\r\n    const [passwordtype, setPasswordtype] = useState(false);\r\n    // const [touched, setTouched] = useState({ email: false, password: false });\r\n    //const [loading, setLoading] = useState(false);\r\n   \r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"component mounted\");\r\n    //     return () => {\r\n    //         console.log(\"component unmounted\");\r\n    //     }\r\n    // }, [])//return inside useEffect runs when the component is unmounted while the function inside useEffect runs when there is a change in dependency array\r\n\r\n    //let emailError = \"\";\r\n    //let passwordError = \"\";\r\n\r\n    //checking functioning of yup library(syntax&working)\r\n\r\n    // const emailValidator=yup.string().required().email();\r\n    // const passwordValidator=yup.string().required().min(8);//for strings input\r\n    // const negArr=yup.array().required().of(yup.number().negative());//for array of negative numbers\r\n    // const numberValidator=yup.number().positive();//for positive numbers\r\n    // const positiveNumberVaildator=yup.array().of(yup.number().positive());//for array of postive numbers\r\n\r\n    \r\n    const formValidator= yup.object().shape({\r\n        email:yup.string().required().email(),\r\n        password:yup.string().required().min(8),\r\n    })\r\n\r\n    try{\r\n        formValidator.validateSync(data);\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                \r\n            <form className=\"mt-32 ml-36\" onSubmit={handleSubmit}>\r\n                <div className=\"flex flex-col space-y-4\">\r\n            <div className=\"mb-8 text-3xl font-bold text-indigo-600\">Get started with a free account</div>\r\n            <div className=\"mb-12\"><p className=\"inline font-semibold\">Already have an account? </p><Link to=\"/auth/login\" className=\"font-bold text-blue-700 underline\">Log in</Link></div></div>\r\n                 \r\n                <div className=\"flex flex-col mt-12 space-y-10\">\r\n\r\n                    <div className=\"flex items-center space-x-4 text-left border-b border-gray-300\"><FaUserCircle className=\"text-indigo-600\" style={{ margin: 0 + 'px', }} /><Input placeholder=\"Username\"/></div>\r\n\r\n                    <div className=\"flex items-center space-x-4 text-left border-b border-gray-300\">\r\n                     \r\n                        <label htmlFor=\"email\" className=\"sr-only\" />\r\n                        <MdEmail className=\"text-indigo-600\" style={{ margin: 0 + 'px', }} />\r\n                        <input className=\"outline-none \"\r\n                        type=\"email\"\r\n                        placeholder=\"Email address\"\r\n                        id=\"email-address\"\r\n                        autoComplete=\"email\"\r\n                        required\r\n                        {...getFieldProps(\"email\")}/>\r\n                        {touched.email && <div className=\"text-sm font-semibold text-red-500 \">{errors.email}</div>}\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-4 text-left border-b border-gray-300\">\r\n                        <label htmlFor=\"Password:\" />\r\n                        <RiLockPasswordLine className=\"text-indigo-600\" style={{ margin: 0 + 'px' }} />\r\n                        <input className=\"outline-none\"\r\n                        type={(passwordtype ? \"text\" : \"password\")}\r\n                        placeholder=\"Password\"\r\n                        required\r\n                        {...getFieldProps(\"password\")}/>\r\n                        {touched.password && <div className=\"text-sm font-semibold text-red-500\">{errors.password}</div>}\r\n                    </div>\r\n                    \r\n                    <div className=\"mt-4\"><input type=\"checkbox\"></input><span className=\"text-blue-600\"> I agree to the terms and conditions</span> </div>\r\n\r\n                </div>\r\n                {isSubmitting && <FaSpinner className=\"mx-auto mt-8 animate-spin\" />}\r\n                <div className=\"flex flex-row items-center space-x-4 text-center mt-11\">\r\n                <div className=\"items-center justify-center font-bold\">Show Password</div>\r\n                    <div className=\"shadow-md\"><input onClick={() => {\r\n                        if (passwordtype === false) {\r\n                            setPasswordtype(true)\r\n                        }\r\n                        else {\r\n                            setPasswordtype(false);\r\n                        }\r\n                    }} className=\"shadow-md cursor-pointer\" type=\"checkbox\" /></div>\r\n                   <div className=\"flex flex-row space-x-4\">\r\n                   <div className=\"ml-32\"> <button type=\"submit\" className=\"p-1 px-4 text-white bg-indigo-500 border-2 rounded-md shadow-md hover:opacity-60\">Get started</button></div>\r\n\r\n\r\n                    <div><button type=\"button\" onClick={(event) => {\r\n                        console.log(\"cancel button clicked\");\r\n                        event.preventDefault();\r\n\r\n                    }} className=\"p-1 px-4 text-white bg-indigo-500 border-2 rounded-md shadow-md hover:opacity-60\">Cancel</button></div>\r\n                    </div>\r\n                </div>\r\n                <p className=\"mt-16 font-semibold text-blue-600\">© 2020 All Rights Reserved. Cookie Preferences, Privacy, and Terms.</p>\r\n            </form>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n\r\n};\r\nSignup.defaultProps={\r\n}\r\n\r\nexport default React.memo(Signup);\r\n\r\n\r\n","\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n   \r\n}\r\n\r\nconst PasswordRecovery: React.FC<Props>=(props) => {\r\n    return (\r\n        <>\r\n            <p>password recovery page.</p>\r\n        </>\r\n    );\r\n\r\n};\r\nPasswordRecovery.defaultProps={\r\n}\r\n\r\nexport default React.memo(PasswordRecovery);\r\n","\r\nimport React, {  } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport AuthHero from \"../../components/AuthHero\";\r\nimport LoginPage from \"./Login.page\";\r\nimport SignupPage from \"./Signup.page\";\r\nimport PasswordRecovery from \"../PasswordRecovery.page\"\r\n// import { User } from \"../../models/User\";\r\n// import AppContext from \"../../App.context\";\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Auth: React.FC<Props> = () => {\r\n\r\n    return (\r\n        <div className=\"flex flex-row justify-between\">\r\n            <Switch>\r\n                <Route path=\"/auth/login\">\r\n                    <LoginPage></LoginPage>\r\n                </Route>\r\n                <Route path=\"/auth/signup\">\r\n                    <SignupPage></SignupPage>\r\n                </Route>\r\n                <Route path=\"/auth/forgotpassword\">\r\n                    <PasswordRecovery/>\r\n                </Route>\r\n               \r\n            </Switch>\r\n            <AuthHero></AuthHero>\r\n            \r\n        </div>\r\n    );\r\n\r\n};\r\nAuth.defaultProps = {\r\n}\r\n\r\nexport default React.memo(Auth);\r\n"],"sourceRoot":""}