{"version":3,"sources":["components/Button/Button.tsx","components/Sidebar.tsx","components/Button/OutlineButton.tsx","UserInformation.tsx","pages/AppContainer/Dashboard.page.tsx","pages/AppContainer/Lecture.page.tsx","pages/AppContainer/Recordings.page.tsx","pages/AppContainer/AppContainer.page.tsx"],"names":["Button","children","className","theme","Icon","rest","themeClasses","iconThemeClasses","defaultProps","React","memo","Sidebar","useState","isMenuOpen","setIsMenuOpen","isAnimating","setIsAnimating","history","useHistory","onClick","undefined","open","xmlns","width","height","viewBox","fill","stroke","d","points","Root","show","as","Fragment","beforeLeave","afterLeave","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","logout","push","OutlineButton","UserInformation","user","useSelector","state","me","src","profile_pic_url","alt","href","placeholder","value","first_name","middle_name","last_name","type","birth_date","birth_month","birth_year","email","education","Dashboard","group","groups","console","log","length","dispatch","useDispatch","query","setQuery","offset","setOffset","useEffect","fetchGroups","status","then","response","payload","onChange","event","target","map","item","index","group_image_url","onError","e","onerror","name","description","Lecture","props","useParams","lectureNumber","batchNumber","Recordings","AppContainer","path"],"mappings":"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","file":"static/js/5.39f75574.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\nimport { ButtonHTMLAttributes } from \"react\";\r\nimport { IconType } from \"react-icons\";\r\n\r\n// import { HiLockClosed } from 'react-icons/hi';\r\n\r\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement>{\r\n   theme?: \"primary\" | \"dark\" | \"danger\" | \"success\" | \"warning\";\r\n   children: string;\r\n   type?:\"submit\" | \"reset\" | \"button\";\r\n   Icon?: IconType;\r\n}\r\n\r\nconst Button: React.FC<Props>=({children,className,theme,Icon,...rest}) => {\r\n\r\n    const themeClasses=theme===\"primary\" ? \"bg-indigo-500 \": theme===\"danger\" ? \"bg-red-500 \": theme===\"success\" ? \"bg-green-500 \" : theme===\"dark\" ? \"bg-gray-600\" : theme===\"warning\" ? \"bg-yellow-500\" : \"bg-blue-100\";\r\n    const iconThemeClasses=theme===\"primary\" ? \"group-hover:text-indigo-400\": \"group-hover:text-gray-100\";\r\n    return (\r\n        <button {...rest} className={\"h-12 w-32 p-2 flex justify-center text-white  text-center items-center  border-2 rounded-lg shadow-md hover:opacity-60 \" + themeClasses + \" \" + className}>\r\n            \r\n            {Icon&&<span><Icon className={\"inline-flex items-center w-4 h-4 mr-2 mt-1 \" + iconThemeClasses} aria-hidden=\"true\"></Icon></span>}{children}</button>\r\n    );\r\n\r\n};\r\n\r\nButton.defaultProps={\r\n\r\n    theme:\"primary\"\r\n}\r\n\r\nexport default React.memo(Button);\r\n","\r\n// import { Dialog, Transition } from \"@headlessui/react\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport React, { Fragment, useState } from \"react\";\r\n// import { useSelector } from \"react-redux\";\r\n\r\n\r\nimport { FiChevronDown } from 'react-icons/fi';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { logout } from \"../api/auth\";\r\n// import { User } from \"../models/User\";\r\n// import AppContext from \"../App.context\";\r\n// import { AppState } from \"../store\";\r\n// import { User } from \"../models/User\";\r\nimport Button from \"./Button/Button\";\r\n// import OutlineButton from \"./Button/OutlineButton\";\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst Sidebar: React.FC<Props> = () => {\r\n\r\n    // const {user}=useContext(AppContext);\r\n    // const user = useSelector<AppState, User | undefined>((state) => state.me);\r\n    // const dispatch = useDispatch();\r\n\r\n     const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n     const [isAnimating, setIsAnimating] = useState(false);\r\n\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n\r\n\r\n\r\n\r\n\r\n            <div className=\"h-screen bg-gray-200 border-r border-gray-300 w-96\">\r\n\r\n                <div className=\"\">\r\n                            <button onClick={isAnimating ? undefined : () => setIsMenuOpen((open) => !open)}   className=\"flex items-center h-10 mt-4 ml-12 space-x-8 text-xs font-bold tracking-widest text-center text-gray-600 bg-gray-100 border rounded-md shadow-md w-60 hover:bg-gray-400\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" className=\"inline m-4 feather feather-home\"><path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>Dashboard<FiChevronDown className=\"inline w-4 h-4\"  /></button>\r\n                            \r\n                    <Transition.Root show={isMenuOpen} as={Fragment}\r\n                        beforeLeave={() => setIsAnimating(true)}\r\n                        afterLeave={() => setIsAnimating(false)}\r\n                    >\r\n                        <Dialog open={isMenuOpen} onClose={setIsMenuOpen}>\r\n                            <Transition.Child as={Fragment}\r\n                                enter=\"transition-transform duration-300\"\r\n                                enterFrom=\"translate-y-0\"\r\n                                enterTo=\"translate-y-8\"\r\n                                leave=\"transition-transform duration-300\"\r\n                                leaveFrom=\"translate-y-8\"\r\n                                leaveTo=\"translate-y-0\">\r\n                                <div className=\"absolute flex flex-col justify-start space-y-4 text-left text-gray-500 ease-in-out transform top-44 left-24 bg-gray items-left\">\r\n                                    <button><ul><li className=\"text-sm font-semibold tracking-wider list-disc hover:text-blue-600 \">Sales</li>\r\n                                        <li className=\"text-sm font-semibold tracking-wider list-disc hover:text-blue-600 \">Analytics</li></ul></button></div>\r\n                                         \r\n                                         </Transition.Child>\r\n                                 </Dialog>\r\n                             </Transition.Root>\r\n\r\n                                    \r\n                            \r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                {/* <img className=\"w-24 h-24 rounded-full\" src={user!.profile_pic_url} alt=\"hello\"></img>\r\n                <span className=\"text-2xl font-semibold text-white\">Welcome {user!.first_name} {user!.middle_name} {user!.last_name} </span>\r\n                <div className=\"font-bold\">Id: {user!.id} Role: {user!.role} Phone:{user!.phone_number}</div> */}\r\n\r\n                {/* <button className=\"items-center justify-center w-56 p-2 text-center bg-white border-2 rounded-lg shadow-md\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" className=\"inline w-4 h-4 mr-2 feather feather-home\"><path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg><span className=\"mr-2 text-sm font-semibold tracking-widest text-gray-700\">Dashboard</span><AiOutlineDown className=\"inline w-3 h-3\" onClick={isAnimating ? undefined : () => setIsMenuOpen((open) => !open)} /></button>\r\n */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                {/* \r\n\r\n                    <Transition.Root show={isMenuOpen} as={Fragment}\r\n                        beforeLeave={() => setIsAnimating(true)}\r\n                        afterLeave={() => setIsAnimating(false)}\r\n                    >\r\n                        <Dialog open={isMenuOpen} onClose={setIsMenuOpen}>\r\n                            <Transition.Child as={Fragment}\r\n                                enter=\"transition-transform duration-300\"\r\n                                enterFrom=\"translate-y-11\"\r\n                                enterTo=\"translate-y-0\"\r\n                                leave=\"transition-transform duration-300\"\r\n                                leaveFrom=\"translate-y-0\"\r\n                                leaveTo=\"translate-y-11\">\r\n                                <div className=\"relative left-0 right-0 ml-4 bg-gray top-4\">\r\n                                    <button><ul><li>sales</li>\r\n                                        <li>analytics</li></ul></button></div>\r\n                                         \r\n                                         </Transition.Child>\r\n                                 </Dialog>\r\n                             </Transition.Root>\r\n         */} <Button className=\"m-24\" theme=\"dark\" onClick={() => {\r\n                    logout();\r\n                    history.push(\"/auth/login\");\r\n                }}>Logout</Button>\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n\r\n};\r\nSidebar.defaultProps = {\r\n}\r\n\r\nexport default React.memo(Sidebar);\r\n","\r\nimport React from \"react\";\r\nimport { ButtonHTMLAttributes } from \"react\";\r\nimport { IconType } from \"react-icons\";\r\n\r\n// import { HiLockClosed } from 'react-icons/hi';\r\n\r\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement>{\r\n   theme?: \"primary\" | \"dark\" | \"danger\" | \"success\" | \"warning\";\r\n   children: string;\r\n   type?:\"submit\" | \"reset\" | \"button\";\r\n   Icon?: IconType;\r\n}\r\n\r\nconst OutlineButton: React.FC<Props>=({children,className,theme,Icon,...rest}) => {\r\n\r\n    const themeClasses=theme===\"primary\" ? \"border-indigo-500 text-indigo-500 hover:bg-indigo-500 hover:text-white \": theme===\"danger\" ? \"border-red-500 text-red-500 hover:bg-red-500 hover:text-white \": theme===\"success\" ? \"border-green-500 text-green-500 hover:bg-green-500 hover:text-white \" : theme===\"dark\" ? \"border-gray-400 text-gray-600 hover:bg-gray-500 hover:text-white \" : theme===\"warning\" ? \"border-yellow-500 text-yellow-500 hover:bg-yellow-500 hover:text-white\" : \"border-blue-100 text-blue-100 hover:bg-blue-500 hover:text-white \";\r\n    const iconThemeClasses=theme===\"primary\" ? \"group-hover:text-indigo-400\": \"group-hover:text-gray-100\";\r\n    return (\r\n        <button {...rest} className={\"h-12 w-32 p-2 flex justify-center text-center items-center  border-2 rounded-lg shadow-md \" + themeClasses + \" \" + className}>\r\n            \r\n            {Icon&&<span><Icon className={\"inline-flex items-center w-4 h-4 mr-2 mt-1 \" + iconThemeClasses} aria-hidden=\"true\"></Icon></span>}{children}</button>\r\n    );\r\n\r\n};\r\n\r\nOutlineButton.defaultProps={\r\n\r\n    theme:\"primary\"\r\n}\r\n\r\nexport default React.memo(OutlineButton);\r\n","\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// import AppContext from \"./App.context\";\r\nimport Button from \"./components/Button/Button\";\r\nimport OutlineButton from \"./components/Button/OutlineButton\";\r\nimport { User } from \"./models/User\";\r\nimport { AppState } from \"./store\";\r\n// import Sidebar from \"./components/Sidebar\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { User } from \"./models/User\";\r\n\r\ninterface Props {\r\n}\r\n\r\nconst UserInformation: React.FC<Props> = () => {\r\n    const user = useSelector<AppState, User | undefined>((state) => state.me);\r\n  \r\n    return (\r\n        <>\r\n            <div className=\"ml-16\">\r\n                <div className=\"mt-4 mb-4 text-lg font-semibold text-gray-600\">GENERAL INFORMATION</div>\r\n                <hr/>\r\n                <div className=\"flex mt-4\">\r\n                    <div className=\"flex flex-col h-48 pr-12 space-y-2 border-r-2\">\r\n                        <div><img src={user!.profile_pic_url} alt=\"avatar\" className=\"rounded-md h-18 w-36\"></img></div>\r\n                        <div><a href=\"google.com\" className=\"font-semibold tracking-wide text-indigo-600\">Upload Picture</a></div>\r\n\r\n                    </div>\r\n                    <div className=\"flex flex-col ml-8 space-y-8\">\r\n                        <div className=\"flex space-x-8\">\r\n                            <form>\r\n                                <div className=\"flex flex-col flex-1 text-sm font-semibold\"><label className=\"pl-2 text-gray-400\">First Name*</label>\r\n                                    <input placeholder=\"First Name\" value={user!.first_name} className=\"h-10 pl-2 border-2 border-gray-300 rounded-lg outline-none w-96\"></input>\r\n                                </div>\r\n                            </form>\r\n                            <form>\r\n                                <div className=\"flex flex-col flex-1 text-sm font-semibold text-gray-600\"><label className=\"pl-2 text-gray-400\">Middle Name</label>\r\n                                    <input placeholder=\"Middle Name\" className=\"h-10 pl-2 border-2 border-gray-300 rounded-lg outline-none w-96\" value={user!.middle_name}></input>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div> <form>\r\n                            <div className=\"flex flex-col flex-1 text-sm font-semibold text-gray-600\"><label className=\"pl-2 text-gray-400\">Last Name*</label>\r\n                                <input placeholder=\"Last Name\" className=\"w-full h-10 pl-2 border-2 border-gray-300 rounded-lg outline-none\" value={user!.last_name}></input>\r\n                            </div>\r\n                        </form></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex space-x-8\">\r\n                    <form>\r\n                        <div className=\"flex flex-col text-sm font-semibold text-gray-600\"><label className=\"pl-2 text-gray-400\">Date of Birth*</label>\r\n                            <input placeholder=\"DOB\" className=\"h-10 pl-2 border-2 border-gray-300 rounded-lg outline-none w-96 \" type=\"\" value={user!.birth_date+\"/\"+user!.birth_month+\"/\"+user!.birth_year}></input>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"flex flex-col space-y-4\">\r\n                        <div className=\"\"><form>\r\n                            <div className=\"flex flex-col text-sm font-semibold text-gray-600\"><label className=\"pl-2 text-gray-400\">Email*</label>\r\n                                <input placeholder=\"Email\" className=\"h-10 pl-2 border-2 border-gray-300 rounded-lg outline-none w-96 \" type=\"email\" value={user!.email}></input>\r\n                            </div>\r\n                        </form>\r\n                        </div>\r\n                        <div><form>\r\n                            <div className=\"flex flex-col text-sm font-semibold text-gray-600\"><label className=\"pl-2 text-gray-400\">Education*</label>\r\n                                <input className=\"h-10 pl-2 border-2 border-gray-300 rounded-lg outline-none w-96 \" type=\"text\" value={user!.education}></input>\r\n                            </div>\r\n                        </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex mt-12 space-x-8\">\r\n                    <Button theme=\"dark\">Save Changes</Button>\r\n                    <OutlineButton theme=\"danger\">Reset All</OutlineButton>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nUserInformation.defaultProps = {\r\n}\r\n\r\nexport default React.memo(UserInformation);\r\n","\r\n// import { setupMaster } from \"cluster\";\r\nimport React, { useEffect, useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { isTypeNode } from \"typescript\";\r\nimport { fetchGroups } from \"../../api/groups\";\r\n// import logo from \"../logonew.svg\";\r\n// import { FaUserCircle, FaSpinner } from 'react-icons/fa';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\nimport Button from '../../components/Button/Button'\r\nimport { Group } from \"../../models/Group\";\r\nimport { AppState } from \"../../store\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// interface Results {\r\n//     gender: string;\r\n//     name: {\r\n//         title: string\r\n//         first: string\r\n//         last: string\r\n//     }\r\n//     creator:{\r\n\r\n//     }\r\n//     picture: {\r\n//         large: string\r\n//         thumbnail: string\r\n//         medium: string\r\n//     }\r\n// }\r\n\r\n// interface Response {\r\n//        results: Results[]\r\n// }\r\ninterface Props { }\r\nconst Dashboard: React.FC<Props> = () => {\r\n    // const [user, setUser] = useState<any[]>([])\r\n    const group = useSelector<AppState, Group[]>((state) => state.groups);\r\n    console.log(group.length);\r\n    const dispatch=useDispatch();\r\n\r\n\r\n    const [query, setQuery] = useState(\"\");\r\n    const [offset, setOffset] = useState(0);\r\n\r\n    //  const [searchContent, setSearchContent] = useState(\"\");\r\n    //  const [group, setGroup] = useState<any[]>([]);\r\n    //  const [filteredGroup, setFilteredGroup] = useState<any[]>([]);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     fetchGroup()\r\n    //         .then((response) => {\r\n    //             console.log(\"Group fetched!\");\r\n    //             setGroup(response.data);\r\n    //             setFilteredGroup(response.data);\r\n    //         })\r\n    //         .catch((error) => console.log(error.message));\r\n    // }, []);\r\n\r\n\r\n\r\n    //  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    //      setSearchContent(event.target.value);\r\n    //  };\r\n\r\n    useEffect(() => {\r\n        fetchGroups({ status: \"all-groups\", query }).then((response) => {\r\n            dispatch({ type: 'me/fetch', payload: response })\r\n            console.log(\"hello\");\r\n            console.log(group)\r\n        });\r\n    }, [query])//eslint-disable-line\r\n\r\n    // useEffect(() => {\r\n    //     const filtered: any[]=[];\r\n    //     user.forEach((value) => {\r\n    //         if (value.name.startsWith(searchContent)) {\r\n    //             filtered.push(value);\r\n    //         }\r\n    //     });\r\n    //     setFilteredGroup(filtered);\r\n    //     console.log(filtered);\r\n    //  }, [searchContent,user]);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <div className=\"\">\r\n\r\n                <form>\r\n                    <div className=\"flex items-center mt-3 mb-12\">\r\n                        <div className=\"ml-64 border-b-2 border-gray-600\">\r\n                            <AiOutlineSearch className=\"inline w-5 h-6 mr-12\" />\r\n                            <input onChange={(event) => {\r\n                                setQuery(event.target.value);\r\n                            }} className=\"w-64 outline-none \" placeholder=\"Search group here\"></input>\r\n                        </div>\r\n\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" className=\"text-white ml-96 feather feather-mail\"><path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"></path><polyline points=\"22,6 12,13 2,6\"></polyline></svg>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" className=\"text-white feather feather-bell\"><path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\"></path><path d=\"M13.73 21a2 2 0 0 1-3.46 0\"></path></svg></div>\r\n\r\n                </form>\r\n                <div>\r\n\r\n                </div>\r\n                {group.map((item, index) => {\r\n                    const itemnumber = index\r\n                    if (itemnumber % 2 === 0) {\r\n                        return (\r\n\r\n                            <div className=\"flex ml-64 text-black bg-gray-200 border border-black rounded-md shadow-2xl w-96 hover:bg-gray-300 \">\r\n                                <img className=\"w-12 h-12 m-4 rounded-full\" src={item.group_image_url} alt=\"\" onError={(e: any) => { e.target.onerror = null; e.target.src = \"https://www.pngjoy.com/pngm/131/2663889_group-of-people-icon-avatar-group-icon-png.png\" }} />\r\n                                <div className=\"flex flex-col\">\r\n                                    <div className=\"mb-6 text-2xl font-bold text-gray-600\"> {item.name}</div>\r\n                                    <div className=\"mb-6 text-base font-semibold text-gray-600\"> {item.description}</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n\r\n                            <div className=\"flex ml-64 text-white bg-gray-600 rounded-md shadow-2xl w-96 hover:bg-gray-900\">\r\n                                <img className=\"w-12 h-12 m-4 rounded-full\" src={item.group_image_url} alt=\"Group-Icon\" onError={(e: any) => { e.target.onerror = null; e.target.src = \"https://www.pngjoy.com/pngm/131/2663889_group-of-people-icon-avatar-group-icon-png.png\" }} />\r\n                                <div className=\"flex flex-col\">\r\n                                    <div className=\"mb-6 text-2xl font-bold text-gray-300\"> {item.name}</div>\r\n                                    <div className=\"mb-6 text-base font-semibold text-gray-300\"> {item.description}</div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                        )\r\n                    }\r\n                })}\r\n                <Button onChange={() => setOffset(offset + 40)}>Change</Button>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n\r\n};\r\nDashboard.defaultProps = {\r\n}\r\n\r\nexport default React.memo(Dashboard);\r\n","\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\ninterface Props{\r\n   \r\n}\r\n\r\nconst Lecture: React.FC<Props>=(props) => {\r\n    const {lectureNumber, batchNumber}=useParams<any>();\r\n    \r\n    return (\r\n        <div>\r\n            Showing data of lecture #{lectureNumber} of batch #{batchNumber}\r\n        </div>\r\n    );\r\n\r\n};\r\nLecture.defaultProps={\r\n}\r\n\r\nexport default React.memo(Lecture);\r\n","\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n   \r\n}\r\n\r\nconst Recordings: React.FC<Props>=(props) => {\r\n    return (\r\n        <>\r\n            <div>Recordings Page h bhai.</div>\r\n        </>\r\n    );\r\n\r\n};\r\nRecordings.defaultProps={\r\n}\r\n\r\nexport default React.memo(Recordings);\r\n","\r\nimport React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/Sidebar\";\r\n// import { User } from \"../../models/User\";\r\nimport UserInformation from \"../../UserInformation\";\r\nimport DashboardPage from \"./Dashboard.page\";\r\nimport LecturePage from \"./Lecture.page\";\r\nimport RecordingsPage from \"./Recordings.page\";\r\n\r\ninterface Props{\r\n\r\n   \r\n}\r\n\r\nconst AppContainer: React.FC<Props>=() => {\r\n    return (\r\n        <div className=\"flex flex-row\">\r\n            <Sidebar/>\r\n            <Switch>\r\n             <Route path=\"/dashboard\">\r\n           <DashboardPage/>\r\n         </Route>\r\n         <Route path=\"/usersettings\">\r\n            <UserInformation/>\r\n          </Route>\r\n         <Route path=\"/recordings\">\r\n           <RecordingsPage/>\r\n         </Route>\r\n         <Route path=\"/batch/:batchNumber/lecture/:lectureNumber\">\r\n             <LecturePage/>\r\n         </Route>\r\n         </Switch>\r\n        </div>\r\n    );\r\n\r\n};\r\nAppContainer.defaultProps={\r\n}\r\n\r\nexport default React.memo(AppContainer);\r\n"],"sourceRoot":""}